// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header has a none string title 1`] = `
<Header
  subtitle=""
  suffix=""
  title={
    <span>
      Hello
    </span>
  }
>
  <div>
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": true,
              "lastClassName": "kkPzXY",
              "rules": Array [
                "
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 27px 30px 26px;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="sc-bxivhb kkPzXY"
        >
          <div>
            <span
              data-hook="title"
            >
              <span>
                Hello
              </span>
            </span>
            <span
              data-hook="subtitle"
            />
          </div>
        </div>
      </StyledComponent>
    </styled.div>
    <Divider>
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": true,
                "lastClassName": "ljuHUZ",
                "rules": Array [
                  "
  width: 100%;
  border-bottom: 1px solid #dfe5eb;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-bdVaJa ljuHUZ"
          />
        </StyledComponent>
      </styled.div>
    </Divider>
  </div>
</Header>
`;

exports[`Header has a title and subtitle 1`] = `
<Header
  subtitle="Some Subtitle"
  suffix=""
  title="Some Title"
>
  <div>
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": true,
              "lastClassName": "kkPzXY",
              "rules": Array [
                "
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 27px 30px 26px;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="sc-bxivhb kkPzXY"
        >
          <div>
            <Heading
              appearance="H3"
              dataHook="title"
            >
              <styled.h1
                as="h3"
              >
                <StyledComponent
                  as="h3"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bwzfXH",
                        "isStatic": false,
                        "lastClassName": "fpXRjA",
                        "rules": Array [
                          "
font-size: ",
                          [Function],
                          "
line-height: ",
                          [Function],
                          ";
color: #162d3d;
",
                          [Function],
                          "
",
                        ],
                      },
                      "displayName": "styled.h1",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bwzfXH",
                      "target": "h1",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <h3
                    className="sc-bwzfXH fpXRjA"
                  >
                    Some Title
                  </h3>
                </StyledComponent>
              </styled.h1>
            </Heading>
            <Text
              dataHook="subtitle"
              secondary={false}
              size="medium"
              tagName="span"
              weight="thin"
            >
              <styled.span
                as="span"
                secondary={false}
                size="medium"
                weight="thin"
              >
                <StyledComponent
                  as="span"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htpNat",
                        "isStatic": false,
                        "lastClassName": "kXlweU",
                        "rules": Array [
                          "
font-size: ",
                          [Function],
                          "
line-height: ",
                          [Function],
                          "
  & > a {
    color: #3899EC;
    text-decoration: none;
    &:hover {
      color: #4EB7F5;
    }
  }
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htpNat",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  secondary={false}
                  size="medium"
                  weight="thin"
                >
                  <span
                    className="sc-htpNat kXlweU"
                    size="medium"
                  >
                    Some Subtitle
                  </span>
                </StyledComponent>
              </styled.span>
            </Text>
          </div>
        </div>
      </StyledComponent>
    </styled.div>
    <Divider>
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": true,
                "lastClassName": "ljuHUZ",
                "rules": Array [
                  "
  width: 100%;
  border-bottom: 1px solid #dfe5eb;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-bdVaJa ljuHUZ"
          />
        </StyledComponent>
      </styled.div>
    </Divider>
  </div>
</Header>
`;

exports[`Header has a title and subtitle and suffix 1`] = `
<Header
  subtitle="Some Subtitle"
  suffix="A Suffix"
  title="Some Title"
>
  <div>
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": true,
              "lastClassName": "kkPzXY",
              "rules": Array [
                "
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 27px 30px 26px;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="sc-bxivhb kkPzXY"
        >
          <div>
            <Heading
              appearance="H3"
              dataHook="title"
            >
              <styled.h1
                as="h3"
              >
                <StyledComponent
                  as="h3"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bwzfXH",
                        "isStatic": false,
                        "lastClassName": "fpXRjA",
                        "rules": Array [
                          "
font-size: ",
                          [Function],
                          "
line-height: ",
                          [Function],
                          ";
color: #162d3d;
",
                          [Function],
                          "
",
                        ],
                      },
                      "displayName": "styled.h1",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bwzfXH",
                      "target": "h1",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <h3
                    className="sc-bwzfXH fpXRjA"
                  >
                    Some Title
                  </h3>
                </StyledComponent>
              </styled.h1>
            </Heading>
            <Text
              dataHook="subtitle"
              secondary={false}
              size="medium"
              tagName="span"
              weight="thin"
            >
              <styled.span
                as="span"
                secondary={false}
                size="medium"
                weight="thin"
              >
                <StyledComponent
                  as="span"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htpNat",
                        "isStatic": false,
                        "lastClassName": "kXlweU",
                        "rules": Array [
                          "
font-size: ",
                          [Function],
                          "
line-height: ",
                          [Function],
                          "
  & > a {
    color: #3899EC;
    text-decoration: none;
    &:hover {
      color: #4EB7F5;
    }
  }
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htpNat",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  secondary={false}
                  size="medium"
                  weight="thin"
                >
                  <span
                    className="sc-htpNat kXlweU"
                    size="medium"
                  >
                    Some Subtitle
                  </span>
                </StyledComponent>
              </styled.span>
            </Text>
          </div>
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-ifAKCX",
                    "isStatic": true,
                    "lastClassName": "iNNKCX",
                    "rules": Array [
                      "
  height: 0;
  display: flex;
  align-items: center;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-ifAKCX",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="sc-ifAKCX iNNKCX"
              >
                A Suffix
              </div>
            </StyledComponent>
          </styled.div>
        </div>
      </StyledComponent>
    </styled.div>
    <Divider>
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": true,
                "lastClassName": "ljuHUZ",
                "rules": Array [
                  "
  width: 100%;
  border-bottom: 1px solid #dfe5eb;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-bdVaJa ljuHUZ"
          />
        </StyledComponent>
      </styled.div>
    </Divider>
  </div>
</Header>
`;

exports[`Header should render 1`] = `
<Header
  subtitle=""
  suffix=""
  title="Some Title"
>
  <div>
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": true,
              "lastClassName": "kkPzXY",
              "rules": Array [
                "
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 27px 30px 26px;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="sc-bxivhb kkPzXY"
        >
          <div>
            <Heading
              appearance="H3"
              dataHook="title"
            >
              <styled.h1
                as="h3"
              >
                <StyledComponent
                  as="h3"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bwzfXH",
                        "isStatic": false,
                        "lastClassName": "fpXRjA",
                        "rules": Array [
                          "
font-size: ",
                          [Function],
                          "
line-height: ",
                          [Function],
                          ";
color: #162d3d;
",
                          [Function],
                          "
",
                        ],
                      },
                      "displayName": "styled.h1",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bwzfXH",
                      "target": "h1",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <h3
                    className="sc-bwzfXH fpXRjA"
                  >
                    Some Title
                  </h3>
                </StyledComponent>
              </styled.h1>
            </Heading>
            <span
              data-hook="subtitle"
            />
          </div>
        </div>
      </StyledComponent>
    </styled.div>
    <Divider>
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": true,
                "lastClassName": "ljuHUZ",
                "rules": Array [
                  "
  width: 100%;
  border-bottom: 1px solid #dfe5eb;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-bdVaJa ljuHUZ"
          />
        </StyledComponent>
      </styled.div>
    </Divider>
  </div>
</Header>
`;
